definitions:
  pagination.PagePack:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  responses.Department:
    properties:
      departmentType: {}
      id:
        type: integer
      label:
        type: string
      parent: {}
      title:
        type: string
    type: object
  responses.DepartmentResponse:
    properties:
      _error_code:
        example: ""
        type: string
      _message:
        example: "null"
        type: string
      _status:
        example: success
        type: string
      data:
        $ref: '#/definitions/responses.Department'
    type: object
  responses.DepartmentsResponse:
    properties:
      _error_code:
        example: ""
        type: string
      _message:
        example: "null"
        type: string
      _status:
        example: success
        type: string
      data:
        items:
          $ref: '#/definitions/responses.Department'
        type: array
      pagination:
        $ref: '#/definitions/pagination.PagePack'
    type: object
  responses.NoContentResponse:
    properties:
      _error_code:
        example: ""
        type: string
      _message:
        example: "null"
        type: string
      _status:
        example: success
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a JWT token
      parameters:
      - in: query
        maxLength: 100
        minLength: 3
        name: email
        required: true
        type: string
      - in: query
        maxLength: 100
        minLength: 8
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login and get JWT token
      tags:
      - auth
  /api/v1/auth/refresh:
    get:
      consumes:
      - application/json
      description: Refresh an access token using a refresh token
      parameters:
      - in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Refresh access token
      tags:
      - auth
  /api/v1/department-type/:
    get:
      consumes:
      - application/json
      description: Returns a list of Deaprtment types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Department types
      tags:
      - department-type
  /api/v1/department/:
    get:
      consumes:
      - application/json
      description: Returns a list ofDeaprtment
      parameters:
      - in: query
        name: department
        type: string
      - in: query
        name: department_type
        type: string
      - in: query
        name: departmenttypeid
        type: integer
      - in: query
        name: expand
        type: boolean
      - in: query
        name: order
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: parent
        type: string
      - in: query
        name: parentid
        type: integer
      - in: query
        name: sort
        type: string
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response object
          schema:
            $ref: '#/definitions/responses.DepartmentsResponse'
      security:
      - BearerAuth: []
      summary: Get Departments
      tags:
      - department
    post:
      consumes:
      - application/json
      description: Returns a Department (requires JWT)
      parameters:
      - in: query
        name: departmenttypeid
        required: true
        type: integer
      - in: query
        name: parentid
        required: true
        type: integer
      - in: query
        maxLength: 100
        minLength: 3
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response object
          schema:
            $ref: '#/definitions/responses.DepartmentResponse'
      security:
      - BearerAuth: []
      summary: Get Department
      tags:
      - department
  /api/v1/department/{id}:
    delete:
      consumes:
      - application/json
      description: Returns No content (requires JWT)
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Response object
          schema:
            $ref: '#/definitions/responses.NoContentResponse'
      security:
      - BearerAuth: []
      summary: Delete Department
      tags:
      - department
    get:
      consumes:
      - application/json
      description: Returns a Deaprtment
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: query
        name: expand
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Response object
          schema:
            $ref: '#/definitions/responses.DepartmentResponse'
      security:
      - BearerAuth: []
      summary: Get Department
      tags:
      - department
    put:
      consumes:
      - application/json
      description: Returns a Department (requires JWT)
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      - in: query
        name: departmenttypeid
        required: true
        type: integer
      - in: query
        name: parentid
        required: true
        type: integer
      - in: query
        maxLength: 100
        minLength: 3
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response object
          schema:
            $ref: '#/definitions/responses.DepartmentResponse'
      security:
      - BearerAuth: []
      summary: Update Department
      tags:
      - department
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
